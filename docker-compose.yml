version: '3.8'

services:
  # SQL Server dla WAPROMAG
  mssql-wapromag:
    image: mcr.microsoft.com/mssql/server:2019-latest
    container_name: wapromag-mssql
    environment:
      - ACCEPT_EULA=Y
      - SA_PASSWORD=WapromagPass123!
      - MSSQL_PID=Express
    ports:
      - "1433:1433"
    volumes:
      - mssql_wapromag_data:/var/opt/mssql
      - ./mssql-wapromag/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - wapro-network
    healthcheck:
      test: ["CMD-SHELL", "/opt/mssql-tools/bin/sqlcmd -S localhost -U sa -P WapromagPass123! -Q 'SELECT 1'"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Raspberry Pi Mock Server
  rpi-server:
    build: ./rpi-server
    container_name: rpi-mock-server
    ports:
      - "8080:8080"  # GUI Web Interface
      - "8081:8081"  # REST API
    environment:
      - NODE_ENV=development
      - MSSQL_WAPROMAG_HOST=mssql-wapromag
      - MSSQL_WAPROMAG_PORT=1433
      - MSSQL_WAPROMAG_USER=sa
      - MSSQL_WAPROMAG_PASSWORD=WapromagPass123!
    volumes:
      - ./rpi-server:/app
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - wapro-network
    depends_on:
      - mssql-wapromag
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # ZEBRA Printer Mock 1
  zebra-printer-1:
    build: ./zebra-printer-1
    container_name: zebra-printer-1
    ports:
      - "9100:9100"  # Standard ZEBRA port
      - "8091:8080"  # Web interface
    environment:
      - PRINTER_NAME=ZEBRA-001
      - PRINTER_MODEL=ZT230
      - PRINTER_IP=zebra-printer-1
    networks:
      - wapro-network
    healthcheck:
      test: ["CMD", "nc", "-z", "localhost", "9100"]
      interval: 15s
      timeout: 5s
      retries: 3

  # ZEBRA Printer Mock 2
  zebra-printer-2:
    build: ./zebra-printer-2
    container_name: zebra-printer-2
    ports:
      - "9101:9100"
      - "8092:8080"
    environment:
      - PRINTER_NAME=ZEBRA-002
      - PRINTER_MODEL=ZT410
      - PRINTER_IP=zebra-printer-2
    networks:
      - wapro-network
    healthcheck:
      test: ["CMD", "nc", "-z", "localhost", "9100"]
      interval: 15s
      timeout: 5s
      retries: 3

  # Test Runner Service
  test-runner:
    build: ./test-runner
    container_name: test-runner
    environment:
      - TEST_ENVIRONMENT=docker
    volumes:
      - ./tests:/tests
      - ./reports:/reports
    networks:
      - wapro-network
    depends_on:
      - rpi-server
      - zebra-printer-1
      - zebra-printer-2
      - mssql-wapromag
    profiles:
      - testing

  # Monitoring Dashboard
  monitoring:
    image: grafana/grafana:latest
    container_name: wapro-monitoring
    ports:
      - "3005:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin123
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/dashboards:/etc/grafana/provisioning/dashboards
      - ./monitoring/grafana/datasources:/etc/grafana/provisioning/datasources
    networks:
      - wapro-network
    profiles:
      - monitoring

networks:
  wapro-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16

volumes:
  mssql_wapromag_data:
  grafana_data: